<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>

        <!-- 禁止预览 -->
        <!--<item name="android:windowDisablePreview">true</item>-->

        <!--
            如果设置android:windowIsTranslucent属性，表明该窗口是半透明的，这样也不会出现白屏或者黑屏。
         但是，它和MainActivity的显示是同步，如果在MainActivity启动的时候，有过多复杂的操作，就会出
         现在手机中点击了应用程序的图标之后，但过两秒才会打开应用程序不好的卡顿体验效果。

            如果设置android:windowDisablePreview属性，禁用窗口的预览动画， 在MainActivity显示之前，系
         统永远不会使用窗口的主题来显示它的预览，这也保证了不会出现白屏或者黑屏。但是，与设置android:windowIsTranslucent属性一样，
         如果在MainActivity启动的时候，有过多复杂的操作，就会出现在手机中点击了应用程序的图标，但过两秒才会打开应用程序不好的卡顿体验效果
        -->
    </style>

    <style name="ThemeSplash" parent="Theme.AppCompat.Light.NoActionBar">
        <!--<item name="android:windowBackground">@drawable/welcome_thirdly</item>-->
        <item name="android:windowBackground">@drawable/splash</item>

        <item name="android:windowNoTitle">true</item>
        <item name="android:windowFullscreen">true</item>
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>

    <style name="WinDialog" parent="@android:style/Theme.Dialog">
        <item name="android:windowFrame">@null</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowIsTranslucent">false</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:background">@android:color/transparent</item>
    </style>


    <style name="txtStyle">
        <item name="android:textSize">18dp</item>
        <item name="android:background">#13CADB</item>
        <item name="android:padding">8dp</item>
        <item name="android:textColor">#FFFFFF</item>
    </style>


    <!-- 日间主题 -->
    <style name="DayTheme" parent="AppTheme">
        <item name="backgroundColor">@color/color_bg_22</item>
        <item name="toolbarColor">@color/colorPrimary</item>
        <item name="buttonColor">@color/colorPrimaryDark</item>
        <item name="textColor">#FFFFFF</item>
    </style>

    <!-- 夜间主题 -->
    <style name="NightTheme" parent="AppTheme">
        <item name="backgroundColor">@color/color_04</item>
        <item name="toolbarColor">@color/color3A3A3A</item>
        <item name="buttonColor">@color/color3F3F3F</item>
        <item name="textColor">@color/color868686</item>
    </style>

    <!-- 自定义EditText的下划线样式 -->
    <style name="customLineColor" parent="Theme.AppCompat.Light">
        <item name="colorControlNormal">@color/gray</item>
        <item name="colorControlActivated">@color/colorAccent</item>
    </style>

    <!-- 自定义浮动标签 -->
    <style name="hintAppearance" parent="TextAppearance.AppCompat">
        <item name="android:textSize">14sp</item>
        <item name="android:textColor">@color/colorPrimary</item>
    </style>

    <!-- 自定义错误提示信息 -->
    <style name="errorAppearance" parent="TextAppearance.AppCompat">
        <item name="android:textSize">14sp</item>
        <item name="android:textColor">@color/red_e73a3d</item>
    </style>

    <!-- 自定义超出计数最大长度样式 -->
    <style name="counterOverflowTextAppearance" parent="TextAppearance.AppCompat">
        <item name="android:textSize">14sp</item>
        <item name="android:textColor">@color/red_e73a3d</item>
    </style>

    <style name="AppTheme.Transparent" parent="@style/AppTheme">
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowBackground">@android:color/transparent</item>
    </style>

    <style name="BottomDialog" parent="@style/AppTheme">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowAnimationStyle">@style/animate_dialog</item>
    </style>

    <style name="animate_dialog">
        <item name="android:windowEnterAnimation">@anim/slide_in_from_bottom</item>
        <item name="android:windowExitAnimation">@anim/slide_out_from_bottom</item>
    </style>


    <style name="base_AlertDialog" parent="Base.Theme.AppCompat.Light.Dialog">

        <!--不设置在6.0以上会出现，宽度不充满屏幕的情况-->
        <item name="windowMinWidthMinor">90%</item>

        <!-- 取消标题栏，如果在代码中setTitle的话会无效 -->
        <item name="android:windowNoTitle">true</item>

        <!-- 标题的和Message的文字颜色 -->
        <!--<item name="android:textColorPrimary">@color/black</item>-->

        <!-- 在使用v7包的alertDialog中无效，6.0中的app.alertDialog有效，这里是修改顶部标题背景颜色，具体颜色自己定，可以是图片 -->
        <item name="android:topDark">#FFFFFF</item>

        <!-- 6.0有效，设置整个背景的颜色，在颜色后面就透明度无法使dailog透明 -->
        <!-- 慎用，会出现奇怪的背景边框-->
        <!--<item name="android:background">@color/white</item>-->

        <!-- 有时无效，在某些系统上面设置背景颜色之后出现奇怪的背景，处这里设置背景为透明，为了隐藏边框 -->
        <!--<item name="android:windowBackground">@android:color/transparent</item>-->
        <!--<item name="android:windowFrame">@null</item>-->

        <!-- 进入和退出动画，左进右出（系统自带） -->
        <!--<item name="android:windowAnimationStyle">@android:style/Animation.Translucent</item>-->

        <!-- 按钮字体颜色,全部一起改，单个改需要在Java代码中修改 -->
        <item name="colorAccent">#000000</item>
    </style>


    <style name="activity_transparent" parent="AppTheme">
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowFullscreen">true</item>
        <item name="android:backgroundDimEnabled">true</item>
        <item name="android:backgroundDimAmount">0.2</item>
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowAnimationStyle">@android:style/Animation.Translucent</item>
    </style>

    <!--全屏加透明-->
    <style name="TranslucentFullScreenTheme" parent="AppTheme">
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowFullscreen">true</item>
        <item name="android:windowNoTitle">true</item>
    </style>

    <!--透明，有任务栏电量时间等-->
    <style name="NoTitleTranslucentTheme" parent="AppTheme">
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowIsTranslucent">true</item>
    </style>

    <style name="BaseDialog" parent="@android:style/Theme.Dialog">
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:colorBackgroundCacheHint">@null</item>
        <item name="android:windowSoftInputMode">adjustPan</item>
        <item name="android:windowIsFloating">true</item>
    </style>

    <style name="EnterExitAnimation" parent="android:Animation">
        <item name="android:windowEnterAnimation">@anim/enter_anim</item>
        <item name="android:windowExitAnimation">@anim/exit_anim</item>
    </style>
</resources>
